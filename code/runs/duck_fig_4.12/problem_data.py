import numpy as np

exact_geometry_dict = {
    "domain": {"type": "annulus", "resolution": 0.05, "ext_refinement": 1.0, "int_refinement": 1.0, "inner_radius": 1,
               "outer_radius": 2,
               "center": np.array([0, 0]), "reload_xdmf": False},
    "sphere": {"dimension": 2, "resolution": 0.03},
    "q_ex_lambda": 'lambda circle_coords: -1+np.array([.9430548227146793,0.9782741316901679,0.8704350493494996,'
                   '1.0106573370251388,0.797815275951332,1.0430405423421838,0.7633555971091958,1.075423747678793,'
                   '0.7526113417810613,1.1013346449878867,0.7418670864514026,1.1047954804434377,0.7311228311247387,'
                   '1.1082563159063983,0.7204046348649976,1.111717151373475,0.7102239903040556,1.115177986838141,'
                   '0.700043345747962,1.1186388223004884,0.6898627011963219,1.1120884122697163,0.6796820566431947,'
                   '1.0970799075421473,0.6694871817977113,1.0820714028229288,0.6577207591695203,1.067062898121707,'
                   '0.6459543365420801,1.0520543934107225,0.6341879139170302,1.007605690086083,0.6224214912884585,'
                   '0.9521172548041419,0.6106550686632822,0.9284820412617681,0.5983329736001275,0.9386212802345671,'
                   '0.5831389646878682,0.9487605191959253,0.5679449557722062,0.9588997581538585,0.5527509468455464,'
                   '0.9676558925294806,0.5375569379087513,0.9693248200963894,0.5110633842713487,0.9709937476619179,'
                   '0.48340104393020195,0.9726626752283467,0.45573870354041784,0.97433160279805,0.4280763632059534,'
                   '0.9750467580557258,0.4353151001929366,0.9741394179187983,0.45418752819832353,0.9732320777815818,'
                   '0.47305995616932756,0.9723247376443855,0.4919323841437966,0.9711438323456446,0.5108048121336908,'
                   '0.969735885046576,0.5315260832916429,0.9683279377464783,0.5549602045138565,0.9669199904472722,'
                   '0.5783943257062032,0.9655120431503059,0.6018284469140306,0.9601286639274328,0.6252625682113708,'
                   '0.9538579375279999,0.6486966895166807,0.94758721110758,0.6721308108452027,0.9413164846960056,'
                   '0.695936862477016,0.9343515466891618,0.7197615990472204,0.9219660921423063,0.7435863356291129,'
                   '0.9095806375845132,0.7674110722307106,0.8971951830263781,0.7912358088290449,0.8848097284677433,'
                   '0.8150605454153661,0.8759250667074451,0.8388852820110398,0.8692262080213766,0.8621280208908653,'
                   '0.8625273493369174,0.8838552610302982,0.8558284906505735,0.9055825011599514,0.8463918342087827,'
                   '0.9273097412975514,0.8342588990693569,0.9490369814333747,0.8221259639293804,0.9707642215724684,'
                   '0.809993028790957,0.9872524727532216,0.7978600936518887,0.9997748813754483,0.7849300509112043,'
                   '1.0122972900019094,0.7712265937779184,1.024819698628466,0.7575231366462618,1.0373421072439064,'
                   '0.7438196795149776,1.0498645158699678,0.7260528710472203,1.061823857540681,0.7043214185195242,'
                   '1.0736028849239903,0.6825899659883241,1.0853819123062032,0.6608585134646143,1.0971609396957973,'
                   '0.6391270609384592,1.1089399670834634,0.6156500565957579,1.1209184201079134,0.592013480547804,'
                   '1.1374403835299216,0.5683769044966083,1.153962346920908,0.5447403284487917,1.170484310353303,'
                   '0.521103752398913,1.187006273792519,0.501864651231796,1.203528237237513,0.48307745370136634,'
                   '1.2200502006587512,0.46429025617545194,1.2384006448976521,0.4455030585525417,1.2573306271144178,'
                   '0.4267158609060011,1.276260609322532,0.4040856258961969,1.2951905915069997,0.38076365962889036,'
                   '1.3141205737256407,0.35744169337769954,1.333081014460816,0.33899875839539617,1.3551103875452326,'
                   '0.32596146397109577,1.3771397606545412,0.3129241695451751,1.399169133743369,0.2998868751023308,'
                   '1.4211985067972837,0.28684958067714017,1.4418559149886772,0.2738122862443308,1.4622897415267102,'
                   '0.29262613429192635,1.4827235680733384,0.34718335947150686,1.5031573946082915,0.4017405846305074,'
                   '1.5227600144298492,0.544324847208787,1.5396035068329497,0.7670833928967137,1.5564469992492769,'
                   '0.8857673521642848,1.5732904916867148,0.965101249088217,1.589466114405187,1.0403103613328428,'
                   '1.5913217150994445,1.1062352761966108,1.5931773157950326,1.171807949800885,1.5950329164904327,'
                   '1.2364647186909068,1.5968885171849618,1.3011214875274286,1.6006887905642873,1.357500771467427,'
                   '1.6072518721918616,1.3952506257750819,1.613814953820038,1.4330004801098435,1.6203780354432429,'
                   '1.4707503344291142,1.626941117072865,1.4902912538934148,1.6335041987052066,1.5074967962231423,'
                   '1.6280859454872416,1.5247023385446663,1.621947612162288,1.5419078808633937,1.6158092788348528,'
                   '1.5591134231812485,1.6096709455014915,1.5704502690198996,1.6035326121419045,1.5790440053740864,'
                   '1.5962314780385631,1.5876377417290939])',
    # circle_coords are in dof order
}

exact_pde_dict = {
    "ode_scheme": "crank_nicolson",
    "u_N": "Expression('pow(t,2)', t=0, a=.05, p = np.pi, degree=5)",
    "marker_dirichlet": [3],
    "marker_neumann": [2],
    "T": 2,
    "N_steps": 120  # a lot of time steps for the exact equation
}

simulated_geometry_dict = {  # as in hourlglasss_IE, but not as fine as the exact geometry above
    "additional_domain_data": {"resolution": 0.1},
    "sphere_resolution": 0.15,
}

simulated_pde_dict = {
    "ode_scheme": "crank_nicolson",
    "N_steps": 60,  # the timesteps of hourglass_IE
    "noise_level_on_exact_BC": 0.01
}

optimization_dict = {"solver": "moola_BFGS",
                     "options": {'jtol': 1e-15, 'gtol': 1e-15, 'maxiter': 250, 'mem_lim': 30, 'rjtol': None,
                                 'rgtol': None},
                                 "inner_product": "H1"}

cost_functional_dict = {
    "final_smoothing_lambda": "lambda t: exp(-0.005/pow(t,2)) if t > DOLFIN_EPS else 0.0",  # it will be evaluated in T-t
    "discretization": None,
    "H1_smoothing": 0
}
